apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

def localProperties = new Properties()
try {
    localProperties.load(new FileInputStream(rootProject.file("local.properties")))
} catch (Exception ignored) {
    logger.warn("No Local Properties File Found!")
}
android {
    namespace = "com.droid.wiz.app"
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.droid.wiz.app"
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion

        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    packagingOptions {
        doNotStrip '**/*.so'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/ANDROID_.SF'
        exclude 'META-INF/ANDROID_.RSA'
        exclude 'META-INF/README.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    buildFeatures {
        viewBinding true
        buildConfig true
    }

    bundle {
        language {
            enableSplit = false
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
        disable 'MissingTranslation'
    }
}

repositories {
    mavenCentral()
    maven { url "https://www.jitpack.io" }
}

dependencies {

    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    api project(':droid-common')


    implementation libs.installreferrer
    implementation libs.homereferrer
    implementation libs.androidx.multidex
    implementation libs.androidx.webkit
    implementation libs.shadowlayout
    implementation libs.refresh.layout.kernel
    implementation libs.refresh.header.classics
    implementation libs.refresh.footer.classics
    implementation libs.refresh.header.material
    implementation libs.number.picker

    //16.0.0
    implementation libs.facebook.android.sdk
    implementation libs.play.services.auth
    coreLibraryDesugaring libs.desugar.jdk.libs
    implementation libs.billing
    implementation libs.flexbox
    implementation(libs.socket.io.client) {
        exclude group: 'org.json', module: 'json'
    }
    debugImplementation libs.leakcanary.android
    implementation libs.jsbridge
    implementation libs.af.android.sdk
    implementation libs.free.reflection
    implementation libs.core
    implementation libs.androidyoutubeplayer.core

    implementation libs.html.textview
    implementation 'org.lsposed.hiddenapibypass:hiddenapibypass:4.3'
}